// +neumorph(100,20,10,15,'flat','tl',1,#fff,#000)
@mixin neumorph ($color: #12b342, $shape: 'flat', $side: 'topLeft', $size: 200, $radius: 20, $distance: 20, $intensity: 30%, $transSpeed: 500, $hoverScale: 1.25)

	$animationType: cubic-bezier(1,.7,.2,1.5)

	position: relative

	width: $size+px
	height: $size+px

	display: flex
	align-items: center
	justify-content: center

	@if $radius != 0
		border-radius: ($size/$radius)+px
	@else if
		border-radius: 0



	background: $color

	+before
		box-shadow: 0 0 0 darken($color, $intensity*0 ), 0 0 0 (lighten($color, $intensity*0 ))
		background: linear-gradient(145deg, rgba($color, 0), rgba($color, 0))
		pointer-events: none
		+cover
		transition-timing-function: $animationType
		transition-duration: $transSpeed+ms
		transition-property: width, height, box-shadow, border-radius, transform
		@if $radius != 0
			border-radius: ($size/$radius)+px
		@else if
			border-radius: 0

	+after('#{$side}')
		box-shadow: inset 0 0 0 darken($color, $intensity*0 ), inset 0 0 0 (lighten($color, $intensity*0 ))
		display: flex
		align-items: center
		justify-content: center
		pointer-events: none
		+cover
		transition-timing-function: $animationType
		transition-duration: $transSpeed+ms
		transition-property: width, height, box-shadow, border-radius, transform
		@if $radius != 0
			border-radius: ($size/$radius)+px
		@else if
			border-radius: 0

	@if $side == 'topLeft'
		+before
			box-shadow: ($distance)+px ($distance)+px ($distance*2)+px (darken($color, $intensity*0.25 )), ($distance*-1)+px ($distance*-1)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))

		@if $shape == 'flat'
		@else if $shape == 'concave'
			background: rgba($color, 0)
			+before
				background: linear-gradient(145deg, darken($color, 7%), lighten($color, 7%))
		@else if $shape == 'convex'
			background: rgba($color, 0)
			+before
				background: linear-gradient(145deg, lighten($color, 7%), darken($color, 7%))
		@else if $shape == 'pressed'
			+before
				box-shadow: 0 0 0 darken($color, $intensity*0 ), 0 0 0 (lighten($color, $intensity*0 ))
			+after('#{$side}')
				box-shadow: inset ($distance)+px ($distance)+px ($distance*2)+px (darken($color, $intensity*0.25 )), inset ($distance*-1)+px ($distance*-1)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))

	@else if $side == 'topRight'
		+before
			box-shadow: ($distance*-1)+px ($distance)+px ($distance*2)+px (darken($color, $intensity*0.25 )), ($distance)+px ($distance*-1)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))
		@if $shape == 'flat'
		@else if $shape == 'concave'
			background: linear-gradient(225deg, darken($color, 7%), lighten($color, 7%))
		@else if $shape == 'convex'
			background: linear-gradient(225deg, lighten($color, 7%), darken($color, 7%))
		@else if $shape == 'pressed'
			+before
				box-shadow: 0 0 0 darken($color, $intensity*0 ), 0 0 0 (lighten($color, $intensity*0 ))
			+after('#{$side}')
				box-shadow: inset ($distance*-1)+px ($distance)+px ($distance*2)+px (darken($color, $intensity*0.25 )), inset ($distance)+px ($distance*-1)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))

	@else if $side == 'botRight'
		+before
			box-shadow: ($distance*-1)+px ($distance*-1)+px ($distance*2)+px (darken($color, $intensity*0.25 )), ($distance)+px ($distance)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))
		@if $shape == 'flat'
		@else if $shape == 'concave'
			background: linear-gradient(315deg, darken($color, 7%), lighten($color, 7%))
		@else if $shape == 'convex'
			background: linear-gradient(315deg, lighten($color, 7%), darken($color, 7%))
		@else if $shape == 'pressed'
			+before
				box-shadow: 0 0 0 darken($color, $intensity*0 ), 0 0 0 (lighten($color, $intensity*0 ))
			+after('#{$side}')
				box-shadow: inset ($distance*-1)+px ($distance*-1)+px ($distance*2)+px (darken($color, $intensity*0.25 )), inset ($distance)+px ($distance)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))

	@else if $side == 'botLeft'
		+before
			box-shadow: ($distance)+px ($distance*-1)+px ($distance*2)+px (darken($color, $intensity*0.25 )), ($distance*-1)+px ($distance)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))
		@if $shape == 'flat'
		@else if $shape == 'concave'
			background: linear-gradient(45deg, darken($color, 7%), lighten($color, 7%))
		@else if $shape == 'convex'
			background: linear-gradient(45deg, lighten($color, 7%), darken($color, 7%))
		@else if $shape == 'pressed'
			+before
				box-shadow: 0 0 0 darken($color, $intensity*0 ), 0 0 0 (lighten($color, $intensity*0 ))
			+after('#{$side}')
				box-shadow: inset ($distance)+px ($distance*-1)+px ($distance*2)+px (darken($color, $intensity*0.25 )), inset ($distance*-1)+px ($distance)+px ($distance*2)+px (lighten($color, $intensity*0.25 ))

	transition-timing-function: $animationType
	transition-duration: $transSpeed+ms
	transition-property: width, height, box-shadow, border-radius, transform
	+h
		// $size: $size*$hoverScale
		// $sizeRadius: $size/$hoverScale
		// width: $size+px
		// height: $size+px
		// border-radius: ($sizeRadius/8)+px
		// +scale($hoverScale)

// flat
// concave
// convex
// pressed


// tl
// tr
// bl
// br
